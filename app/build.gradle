apply plugin: 'com.android.application'
android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "com.pain2gradle.myapplication"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode getTagNumber()
        versionName getTagName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //设置产品通道要先在这里声明
        flavorDimensions "channelfeature"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors{
        channelpain{
            dimension "channelfeature"
            manifestPlaceholders.put("CHANNEL","channel1")
        }
        channelsky{
            dimension "channelfeature"
            manifestPlaceholders.put("CHANNEL","channel2")
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.supportVersion"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
//实际上这个方法是用来获取当前分支上最新的一个TAG并且将TAGName转化为buildconfig的veesionname
def getTagName(){
    def stdout=new ByteArrayOutputStream()
    //执行命令行 用，隔开
    exec {
        commandLine 'git','describe','--abbrev=0','--tags'
        //这是在闭包 内部传值到外界的一个方法（ps；和java赋值是相反的 ？）
        standardOutput=stdout
    }
    //过滤字符就好，比如空格换行之类的
    return  stdout.toString().trim()
}
//同上，每次打一个tag就会在VersionCode+1
def getTagNumber(){
    def stdout=new ByteArrayOutputStream()
    exec {
        commandLine 'git','tag','--list'
        standardOutput=stdout
    }
    return  stdout.toString().split('\n').size()
}
def getCommitNumber(){
    def cmd = 'git rev-list HEAD --first-parent --count'
    return cmd.execute().text.trim().toInteger()
}
